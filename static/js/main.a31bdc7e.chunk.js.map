{"version":3,"sources":["image/logo.png","image/math.jpg","utils/all_path.js","Component/Line/Line.js","Component/Text/Text.js","Component/CheatButton/CheatButton.js","Component/LevelButton/LevelButton.js","Component/Window/Window.js","utils/get_circle.js","utils/points_and_length.js","Component/Navbar/Navbar.js","Container/About/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","permutator","inputArr","results","permute","arr","memo","cur","memom","i","length","splice","push","concat","slice","Line","points_for_line","map","el","p","color","style","k","n","className","key","fill","textAnchor","d","stroke","strokeWidth","strokeLinecap","strokeDasharray","x","y","dy","dx","fontWeight","fontFamily","fontSize","Text","points","text","CheatButton","onCheatButt","state","isClick","setState","id","onClick","this","props","route","min_distance","Component","LevelButton","onGetLevel","easy","medium","hard","Window","size","level","width","height","w0","h0","w","h","circle_array","r1","Math","random","r2","getCircle","co","someArray","pointsAndDistance","forEach","j","p2","distance","sqrt","round","pointAndLength","all_path","pathName","c","min","indexOf","cx","cy","r","join","Navbar","src","require","alt","About","App","onEasyLevel","onMeduimLevel","onHardLevel","answer","monitorHeight","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a31bdc7e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b61bab35.png\";","module.exports = __webpack_public_path__ + \"static/media/math.5360fa44.jpg\";","function permutator(inputArr) {\r\n  var results = [];\r\n  function permute(arr, memo) {\r\n    var cur,\r\n      memom = memo || [];\r\n    for (var i = 0; i < arr.length; i++) {\r\n      cur = arr.splice(i, 1);\r\n      if (arr.length === 0) {\r\n        results.push(memom.concat(cur));\r\n      }\r\n      permute(arr.slice(), memom.concat(cur));\r\n      arr.splice(i, 0, cur[0]);\r\n    }\r\n    return results;\r\n  }\r\n  return permute(inputArr);\r\n}\r\n\r\nexport default function allPath(points) {\r\n  let all_path = permutator(points);\r\n  const arr_of_name = points.map((el, i) => `c${i + 1}`);\r\n  let pathName = permutator(arr_of_name);\r\n  all_path = all_path.map((el) => {\r\n    let arr = [];\r\n    for (let j = 0; j < el.length - 1; j++) {\r\n      arr.push([el[j], el[j + 1]]);\r\n    }\r\n    return arr;\r\n  });\r\n\r\n  all_path = all_path.map((el) => {\r\n    let arr = [];\r\n    for (let j = 0; j < el.length; j++) {\r\n      let distance = Math.sqrt(\r\n        (el[j][0][0] + el[j][1][[0]]) ** 2 + (el[j][0][1] + el[j][1][1]) ** 2\r\n      );\r\n      distance = Math.round((distance + 31) % 25, 0);\r\n      arr.push(distance);\r\n    }\r\n    return arr;\r\n  });\r\n  all_path = all_path.map((el) => {\r\n    let c = 0;\r\n    for (let k = 0; k < el.length; k++) {\r\n      c += el[k];\r\n    }\r\n    return c;\r\n  });\r\n\r\n  const min_distance = Math.min(...all_path);\r\n  const index = all_path.indexOf(min_distance);\r\n  return [pathName[index], min_distance];\r\n}\r\n\r\n// const hi_combination = get_hi_lo_distance(\"start\", lo, start);\r\n\r\n// const get_hi_lo_distance = (name, arr, arr1) => {\r\n//   const a = arr.map((el, i) => {\r\n//     let distance = Math.sqrt(\r\n//       (el[0] * 10 + arr1[0]) ** 2 + (el[1] * 10 + arr1[1]) ** 2\r\n//     );\r\n//     distance = Math.floor(distance % 25);\r\n//     return [arr1, el, distance, [name, `c${i + 1}`]];\r\n//   });\r\n//   return a;\r\n// };\r\n// const lo_combination = get_hi_lo_distance(\"end\", hi, end);\r\n","import React from \"react\";\r\nimport \"./Line.css\";\r\n\r\nconst Line = ({ points_for_line }) => {\r\n  const lines = points_for_line.map((el, i) => {\r\n    let p = `M ${el[0][0]} ${el[0][1]} L ${el[1][0]} ${el[1][1]}`;\r\n    let color = \"rgb(129, 0, 0)\";\r\n    let style = \"round\";\r\n    let k = 1;\r\n    let n = 2;\r\n    if (i % 2 === 0 && i % 4 !== 0 && i % 10 !== 0 && i % 6 !== 0) {\r\n      color = \"rgb(5, 0, 0)\";\r\n      style = \"square\";\r\n      k = -1;\r\n      n = 1.4;\r\n    } else if (i % 3 === 0 && i % 6 !== 0) {\r\n      color = \"rgb(37, 0, 194)\";\r\n      n = 3;\r\n    } else if (i % 4 === 0) {\r\n      color = \"rgb(244, 88, 112)\";\r\n      n = 1.5;\r\n    } else if (i % 5 === 0) {\r\n      color = \"rgb(67, 169, 112)\";\r\n      n = 1.7;\r\n    } else if (i % 6 === 0) {\r\n      color = \"rgb(149, 0, 194)\";\r\n      n = 1.8;\r\n    }\r\n    return (\r\n      <g className=\"dim t\" key={i} fill={color} textAnchor=\"middle\">\r\n        <path\r\n          key={i}\r\n          d={p}\r\n          style={{\r\n            stroke: `${color}`,\r\n            fill: \"none\",\r\n            strokeWidth: `${n}`,\r\n            strokeLinecap: `${style}`,\r\n            strokeDasharray: \"1,4\"\r\n          }}\r\n        />\r\n        <text\r\n          className=\"t\"\r\n          key={i + 1}\r\n          x={(el[0][0] + el[1][0]) / 2}\r\n          y={(el[0][1] + el[1][1]) / 2}\r\n          dy={k * (15 + i)}\r\n          dx={k * (15 + i)}\r\n          fontWeight=\"bold\"\r\n          fontFamily=\"sans-serif\"\r\n          fontSize=\"20px\"\r\n        >\r\n          {el[2]}\r\n        </text>\r\n      </g>\r\n    );\r\n  });\r\n  return lines;\r\n};\r\n\r\nexport default Line;\r\n","import React from \"react\";\r\nimport \"./Text.css\";\r\nconst Text = ({ points }) => {\r\n  const text = [];\r\n  for (let i = 0; i < points.length; i++) {\r\n    text.push(\r\n      <g key={i} fontSize=\"15\" fontFamily=\"sans-serif\" textAnchor=\"middle\">\r\n        <text\r\n          className=\"c\"\r\n          key={i}\r\n          x={points[i][0]}\r\n          y={points[i][1]}\r\n          dy=\"20\"\r\n          dx=\"30\"\r\n        >\r\n          c{i + 1}\r\n        </text>\r\n      </g>\r\n    );\r\n  }\r\n\r\n  return text;\r\n};\r\n\r\nexport default Text;\r\n","import React, { Component } from \"react\";\r\nimport \"./CheatButton.css\";\r\n\r\nclass CheatButton extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { isClick: false };\r\n  }\r\n  onCheatButt = () => {\r\n    if (this.state.isClick) {\r\n      this.setState({ isClick: false });\r\n    } else {\r\n      this.setState({ isClick: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"cheat\">\r\n        <button\r\n          onClick={this.onCheatButt}\r\n          className=\"cheat grow shadow-1 f6 link  ba  ph3 pv2 mb2 dib br3\"\r\n        >\r\n          cheat\r\n        </button>\r\n        {this.state.isClick ? (\r\n          <div>\r\n            <h3 id=\"ans\">\r\n              {this.props.route} <span>ด้วยค่าผ่านทางคือ</span>{\" \"}\r\n              {this.props.min_distance}\r\n            </h3>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CheatButton;\r\n","import React from \"react\";\r\nimport \"./LevelButton.css\";\r\n\r\nconst LevelButton = ({ onGetLevel }) => {\r\n  const { easy, medium, hard } = onGetLevel;\r\n  return (\r\n    <div className=\"flex\" id=\"btn_div\">\r\n      <button\r\n        className=\"btn grow shadow-1 f6 link dim ba ph3 pv2 mb2 dib br3\"\r\n        onClick={easy}\r\n      >\r\n        easy\r\n      </button>\r\n      <button\r\n        className=\"btn grow shadow-1 f6 link dim ba  ph3 pv2 mb2 dib br3 \"\r\n        onClick={medium}\r\n      >\r\n        medium\r\n      </button>\r\n      <button\r\n        className=\"btn grow shadow-1 f6 link dim ba  ph3 pv2 mb2 dib br3 \"\r\n        onClick={hard}\r\n      >\r\n        hard\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LevelButton;\r\n","import React from \"react\";\r\nimport getCircle from \"../../utils/get_circle\";\r\nimport pointAndLength from \"../../utils/points_and_length\";\r\nimport all_path from \"../../utils/all_path\";\r\nimport Line from \"../Line/Line\";\r\nimport Text from \"../Text/Text\";\r\nimport CheatButton from \"../CheatButton/CheatButton\";\r\nimport LevelButton from \"../LevelButton/LevelButton\";\r\n\r\nimport \"./Window.css\";\r\n\r\nconst Window = ({ size, level, onGetLevel }) => {\r\n  const { width, height } = size;\r\n  let points = getCircle(level, width, height);\r\n  const co = points;\r\n  const points_for_line = pointAndLength(points);\r\n\r\n  let [route, min_distance] = all_path(points);\r\n\r\n  points = points.map((el, i) => {\r\n    return <circle key={i} cx={el[0]} cy={el[1]} fill=\"red\" r=\"7\" />;\r\n  });\r\n  route = route.join(\" -> \");\r\n  return (\r\n    <div>\r\n      <svg width={width} height={height} id=\"show\">\r\n        <Text points={co} />\r\n        <Line points_for_line={points_for_line} />\r\n        {points}\r\n      </svg>\r\n\r\n      <LevelButton onGetLevel={onGetLevel} />\r\n      <CheatButton route={route} min_distance={min_distance} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Window };\r\n","export default function getCircle(n, width, height) {\r\n  let w0 = width / 4.5;\r\n  const h0 = height / 3;\r\n  let w = w0;\r\n  if (n === 4) {\r\n    w0 *= 2;\r\n  }\r\n  let h = h0;\r\n  const circle_array = [];\r\n  for (let i = 1; i <= n; i++) {\r\n    const r1 = Math.random() * 13.19;\r\n    const r2 = Math.random() * 67.29;\r\n    if (n >= 5 && i === 2) {\r\n      circle_array.push([w + r1, 3 * (r2 + 5)]);\r\n    } else if (n === 6 && i === 5) {\r\n      circle_array.push([w + r1, height - (2 * r2 + 30)]);\r\n    } else if (n >= 5 && i === 5) {\r\n      circle_array.push([w0 * 3, h + r2]);\r\n    } else if (n === 4 && i === 4) {\r\n      circle_array.push([w0 * 3, h + r2]);\r\n    } else {\r\n      circle_array.push([w + r1, h + r2]);\r\n    }\r\n    w += w0;\r\n    if (i === 3 && n !== 4) {\r\n      w = w0;\r\n      h += h0;\r\n    } else if (n === 4 && i === 2) {\r\n      w0 /= 2;\r\n      w = w0;\r\n      h += h0;\r\n    }\r\n  }\r\n  return circle_array;\r\n}\r\n","export default function pointAndLength(someArray) {\r\n  const pointsAndDistance = [];\r\n  if (someArray) {\r\n    someArray.forEach((el, i) => {\r\n      for (var j = i; j < someArray.length; j++) {\r\n        if (j !== i) {\r\n          let p2 = someArray[j];\r\n          const distance = Math.sqrt(\r\n            (el[0] + p2[0]) ** 2 + (el[1] + p2[1]) ** 2\r\n          );\r\n\r\n          pointsAndDistance.push([el, p2, Math.round((distance + 31) % 25)]);\r\n        }\r\n      }\r\n    });\r\n    return pointsAndDistance;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./Navbar.css\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div id=\"top\" className=\"shadow-5\">\r\n      <img\r\n        src={require(\"../../image/logo.png\")}\r\n        alt=\"logo\"\r\n        className=\"logo\"\r\n      ></img>\r\n      <h2 className=\"grow h2\">ไดซก้า</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./About.css\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div id=\"about\">\r\n      <h2 className=\"how\">วิธีการเล่น</h2>\r\n      <p className=\"p\">\r\n        มีจุดอยู่ 4-6 จุด คือ c1,c2,...,c6 แล้วแต่ระดับความยาก\r\n        เลขบนเส้นประคือค่าผ่านทาง\r\n        ให้เดินทางจนครบทุกจุดโดยเงื่อนไขคือต้องเสียค่าเดินทางให้ต่ำที่สุด\r\n      </p>\r\n      <p className=\"p\">\r\n        มีโอกาสที่จะมีหลายคำตอบนะ แค่ขอให้ค่าผ่านทางเท่ากันพอ อิอิ\r\n        และไม่ควรปรับขนาดหน้าจอ\r\n      </p>\r\n\r\n      <div id=\"credit\">\r\n        <h2 className=\"how\">เกี่ยวกับ</h2>\r\n        <img\r\n          src={require(\"../../image/math.jpg\")}\r\n          alt=\"math\"\r\n          className=\"mathpic\"\r\n        ></img>\r\n        <p className=\"p\">\r\n          เกมที่ดูเหมือนจะไม่ยากอะไร แต่การเขียนเป็นโปรแกรมนั้นค่อนข้างซับซ้อน\r\n          และมีคณิตศาสตร์มาเกี่ยวข้องอย่างน่าอัศจรรย์\r\n          โดยเฉพาะเมื่อผู้เล่นเลือกเล่นระดับยาก กรณีทั้งหมดมีถึง 720 กรณีคือ 6!\r\n          กรณี\r\n          และการแสดงผลภาพก็มีคณิตศาสตร์มาคำนวณเพื่อให้จุดต่างๆสามารถอยู่ภายในกรอบนี่กำหนด\r\n          และเว็บนี้ใช้เครื่องมือ React ในการสร้าง ซึ่งผู้สร้างหัดใช้งาน\r\n          จึงเจออุปสรรคที่ค่อนข้างมาก\r\n        </p>\r\n        <p className=\"p\">ภาคแมท มหิดล 61</p>\r\n        <p className=\"p\">\r\n          หากเว็บมีปัญหา หรือสอบถามเพิ่มเติม ติดต่อผม (ยูโนะ) 065-930-7037\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\nimport { SizeMe } from \"react-sizeme\";\nimport \"./App.css\";\nimport { Window } from \"./Component/Window/Window\";\nimport Navbar from \"./Component/Navbar/Navbar\";\nimport About from \"./Container/About/About\";\n\n// import { Route } from \"./Component/Window/Window\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      n: 4,\n      answer: false\n    };\n  }\n  onEasyLevel = () => {\n    this.setState({ n: 4 });\n  };\n\n  onMeduimLevel = () => {\n    this.setState({ n: 5 });\n  };\n\n  onHardLevel = () => {\n    this.setState({ n: 6 });\n  };\n\n  render() {\n    return (\n      <div id=\"all\">\n        <Navbar />\n        <div className=\"test\">\n          <SizeMe monitorHeight>\n            {({ size }) => (\n              <div className=\"test2 center shadow-5 bw-4 br4 dib\">\n                <Window\n                  size={size}\n                  level={this.state.n}\n                  onGetLevel={{\n                    easy: this.onEasyLevel,\n                    medium: this.onMeduimLevel,\n                    hard: this.onHardLevel\n                  }}\n                />\n              </div>\n            )}\n          </SizeMe>\n        </div>\n        <About />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"tachyons\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}